---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: springcloud
  name: springcloud-gateway
  labels:
    app: springcloud-gateway
spec:
  replicas: 4
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      name: springcloud-gateway
      labels:
        app: springcloud-gateway
    spec:
      nodeSelector:
        service: "service"
      containers:
        - name: springcloud-gateway
          image: registry-vpc.cn-shenzhen.aliyuncs.com/jlyx/gateway-master:3392_201912070228
          imagePullPolicy: IfNotPresent
          livenessProbe:
            tcpSocket:
              port: 5000
            initialDelaySeconds: 60
            periodSeconds: 30
          env:
            - name: CLOUD_EUREKA_DEFAULTZONE
              valueFrom:
                configMapKeyRef:
                  name: business-service-config
                  key: CLOUD_EUREKA_DEFAULTZONE
            - name: JASYPT_ENCRYPTOR_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: business-service-config
                  key: JASYPT_ENCRYPTOR_PASSWORD
          envFrom:
            - configMapRef:
                name: business-service-config
          volumeMounts:
            - mountPath: /etc/localtime
              name: localtime
            - name: app-logs
              mountPath: /logs
        - name: filebeat
          image: docker.elastic.co/beats/filebeat:7.0.0
          volumeMounts:
            - name: app-logs
              mountPath: /logs
            - name: filebeat-config
              mountPath: /usr/share/filebeat/filebeat.yml
              readOnly: true
              subPath: filebeat.yml
      volumes:
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: app-logs
          emptyDir: {}
        - name: filebeat-config
          configMap:
            name: filebeat-config
      restartPolicy: Always
      imagePullSecrets:
        - name: regcred
  selector:
    matchLabels:
      app: springcloud-gateway
---
apiVersion: v1
kind: Service
metadata:
  name: springcloud-gateway
  namespace: springcloud
spec:
  selector:
    app: springcloud-gateway
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: springcloud-gateway-ingress-route
  namespace: springcloud
spec:
  entryPoints:
    - web
    - websecure
  routes:
    - match: Host(`admin.juliyouxiang.com`) && PathPrefix(`/api`)
      kind: Rule
      services:
        - name: springcloud-gateway
          port: 80
  tls:
    secretName: admin-https-secret